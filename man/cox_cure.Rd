% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cox_cure.R
\name{cox_cure}
\alias{cox_cure}
\alias{cox_cure.fit}
\title{Cox Cure Rate Model}
\usage{
cox_cure(
  surv_formula,
  cure_formula,
  time,
  event,
  data,
  subset,
  contrasts = NULL,
  bootstrap = 0,
  control = cox_cure.control(),
  surv_control = intsurv.control(),
  cure_control = intsurv.control(),
  ...
)

cox_cure.fit(
  surv_x,
  cure_x,
  time,
  event,
  cure_intercept = TRUE,
  bootstrap = 0,
  control = cox_cure.control(),
  surv_control = intsurv.control(),
  cure_control = intsurv.control(),
  ...
)
}
\arguments{
\item{surv_formula}{A formula object starting with \code{~} for the model
formula in survival model part.  For Cox model, no intercept term is
included even if an intercept is specified or implied in the model
formula.  A model formula with an intercept term only is not allowed.}

\item{cure_formula}{A formula object starting with \code{~} for the model
formula in incidence model part.  For logistic model, an intercept term
is included by default and can be excluded by adding \code{+ 0} or
\code{- 1} to the model formula.}

\item{time}{A numeric vector for the observed survival times.}

\item{event}{A numeric vector for the event indicators.}

\item{data}{An optional data frame, list, or environment that contains the
model covariates and response variables (\code{time} and \code{event})
If they are not found in data, the variables are taken from the
environment of the specified formula, usually the environment from which
this function is called.}

\item{subset}{An optional logical vector specifying a subset of observations
to be used in the fitting process.}

\item{contrasts}{An optional list, whose entries are values (numeric
matrices or character strings naming functions) to be used as
replacement values for the contrasts replacement function and whose
names are the names of columns of data containing factors.  See
\code{contrasts.arg} of \code{\link[stats]{model.matrix.default}} for
details.}

\item{bootstrap}{An integer representing the number of bootstrap samples for
estimating standard errors of the coefficient estimates.  The bootstrap
procedure will not run if \code{bootstrap = 0} by default.  If
\code{bootstrap > 0}, the specified number of bootstrap samples will be
used for estimating the standard errors.}

\item{control}{A \code{cox_cure.control} object that contains the control
parameters.}

\item{surv_control, cure_control}{\code{intsurv.control} objects that contain
the control parameters for the survival model part and logistic model
part, respectively.}

\item{...}{Other arguments passed to the control functions for backward
compatibility.}

\item{surv_x}{A numeric matrix for the design matrix of the survival model
component.}

\item{cure_x}{A numeric matrix for the design matrix of the cure rate model
component.  The design matrix should exclude an intercept term unless we
want to fit a model only including the intercept term.  In that case, we
need further set \code{cure_intercept = FALSE} to not standardize the
intercept term.}

\item{cure_intercept}{A logical value specifying whether to add an intercept
term to the cure rate model component.  If \code{TRUE} by default, an
intercept term is included.}
}
\value{
A \code{cox_cure} object that contains the fitted regular Cox cure rate
model.
}
\description{
For right-censored data, fit a regular Cox cure rate model (Kuk and Chen,
1992; Sy and Taylor, 2000) via an EM algorithm.
}
\examples{
library(intsurv)

### regular Cox cure rate model ======================================
## 1. simulate right-censored data with a cure fraction
set.seed(123)
n_obs <- 2e2
p <- 5
x_mat <- matrix(rnorm(n_obs * p), nrow = n_obs, ncol = p)
colnames(x_mat) <- paste0("x", seq_len(p))
cure_beta <- rep(0.5, p)
b0 <- - 1
expit <- binomial()$linkinv
ncure_prob <- expit(as.numeric(b0 + x_mat \%*\% cure_beta))
is_cure <- 1 - rbinom(n_obs, size = 1, prob = ncure_prob)
surv_beta <- rep(0.5, p)
risk_score <- as.numeric(x_mat \%*\% surv_beta)
event_time <- rexp(n_obs, exp(as.numeric(x_mat \%*\% surv_beta)))
censor_time <- 10
event <- ifelse(event_time < censor_time & ! is_cure, 1, 0)
obs_time <- ifelse(event > 0, event_time, censor_time)

## model-fitting from given design matrices
fit1 <- cox_cure.fit(x_mat, x_mat, obs_time, event, bootstrap = 30)
summary(fit1)

## coefficient estimates from both model parts
coef(fit1)

## or a particular part
coef(fit1, "surv")
coef(fit1, "cure")

## weighted concordance index (C-index)
fit1$model$c_index
## which also can be computed as follows
cIndex(time = obs_time, event = event,
       risk_score = fit1$fitted$surv_xBeta,
       weight = ifelse(event > 0, 1, fit1$fitted$susceptible_prob))

## 2. create a toy dataset
toy_dat <- data.frame(time = obs_time, status = event)
toy_dat$group <- cut(abs(x_mat[, 1L]), breaks = c(0, 0.5, 1, 3, Inf),
                     labels = LETTERS[1:4])
toy_dat <- cbind(toy_dat, as.data.frame(x_mat[, - 1L, drop = FALSE]))

## model-fitting from given model formula
fit2 <- cox_cure(
    ~ x3 + x4 + group,
    ~ group + x3 + offset(x2),
    time = time,
    event = status,
    data = toy_dat,
    subset = group != "D",
    bootstrap = 30
)
summary(fit2)

## get BIC's
BIC(fit1)
BIC(fit2)
BIC(fit1, fit2)
}
\references{
Kuk, A. Y. C., & Chen, C. (1992). A mixture model combining logistic
regression with proportional hazards regression. \emph{Biometrika}, 79(3),
531--541.

Peng, Y. (2003). Estimating baseline distribution in proportional hazards
cure models. \emph{Computational Statistics & Data Analysis}, 42(1-2),
187--201.

Sy, J. P., & Taylor, J. M. (2000). Estimation in a Cox proportional hazards
cure model. \emph{Biometrics}, 56(1), 227--236.
}
\seealso{
\code{\link{cox_cure_net}} for fitting the regularized Cox cure rate model
with elastic-net penalty.
}

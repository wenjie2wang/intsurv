// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// aggregateSum
Rcpp::NumericVector aggregateSum(const Rcpp::NumericVector& x, const Rcpp::NumericVector& indices, bool simplify, bool cumulate, bool revcum);
RcppExport SEXP _intsurv_aggregateSum(SEXP xSEXP, SEXP indicesSEXP, SEXP simplifySEXP, SEXP cumulateSEXP, SEXP revcumSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type indices(indicesSEXP);
    Rcpp::traits::input_parameter< bool >::type simplify(simplifySEXP);
    Rcpp::traits::input_parameter< bool >::type cumulate(cumulateSEXP);
    Rcpp::traits::input_parameter< bool >::type revcum(revcumSEXP);
    rcpp_result_gen = Rcpp::wrap(aggregateSum(x, indices, simplify, cumulate, revcum));
    return rcpp_result_gen;
END_RCPP
}
// revcumsum
Rcpp::NumericVector revcumsum(SEXP x);
RcppExport SEXP _intsurv_revcumsum(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(revcumsum(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_intsurv_aggregateSum", (DL_FUNC) &_intsurv_aggregateSum, 5},
    {"_intsurv_revcumsum", (DL_FUNC) &_intsurv_revcumsum, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_intsurv(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
